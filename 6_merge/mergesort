

function mergeSort(arr) {
    let arrays = [];

    function splitArray(array) {
        let half = Math.floor(array.length / 2);
        let one = array.slice(0, half);
        let two = array.slice(half);
        return [one, two]


    }

    splitArrau();

}



function mergeSort1(arr) {
    if (arr.length <= 1) return arr;
    let mid = Math.floor(arr.length / 2);
    let left = mergeSort1(arr.slice(0, mid));
    let right = mergeSort1(arr.slice(mid));
    return mergeTwo(left, right);
    // mergeSort();

}



console.log(mergeSort1([1, 2, 3, 5, 1,22,323,6, 712, 11]));


function mergeTwo(arr1, arr2) {
    let mergedArr = [];
    let i = 0, j = 0;

    while (i < arr1.length && j < arr2.length) {
        if (arr1[i] < arr2[j] || arr1[i] === arr2[j]) {
            mergedArr.push(arr1[i]);
            i++;
        } else if (arr2[j] < arr1[i]) {
            mergedArr.push(arr2[j]);
            j++;
        }

        // if (i === arr1.length) {
        //     mergedArr = mergedArr.concat(arr2.slice(j));
        //     break;
        // } else if (j === arr2.length) {
        //     mergedArr = mergedArr.concat(arr1.slice(i));
        // }
    }




    while (i < arr1.length) {

        mergedArr.push(arr1[i]);
        i++;
    }
    while (j < arr2.length) { mergedArr.push(arr2[j]); j++ }

    return mergedArr;
}

